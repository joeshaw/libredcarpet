/* -*- Mode: csharp; tab-width: 4; c-basic-offset: 4; indent-tabs-mode: nil -*- */

// namespace {
    public static uint CapabilityNone                = 0;
    public static uint CapabilityProvideAllVersions  = (1 << 0);
    public static uint CapabilityIgnoreAbsentEpochs  = (1 << 2);
    public static uint CapabilityRollback            = (1 << 3);
    public static uint CapabilityAlwaysVerifyRelease = (1 << 4);
    public static uint CapabilityPatches             = (1 << 5);

    [DllImport("libredcarpet")]
    static extern IntPtr rc_packman_query_file(IntPtr raw, string filename, bool filter_file_deps);

    public RC.Package QueryFile(string filename, bool filter_file_deps) {
        IntPtr raw_ret = rc_packman_query_file(Handle, filename, filter_file_deps);
        RC.Package ret;
        if (raw_ret == IntPtr.Zero)
            ret = null;
        else
            ret = new RC.Package(raw_ret, true);
        return ret;
    }

    [DllImport("libredcarpet")]
    static extern void rc_packman_set_global(IntPtr raw);

    [DllImport("libredcarpet")]
    static extern IntPtr rc_packman_get_global();

    public static RC.Packman Global { 
        get {
            IntPtr raw_ret = rc_packman_get_global();
            RC.Packman ret;
            if (raw_ret == IntPtr.Zero)
                ret = null;
            else
                ret = (RC.Packman) GLib.Object.GetObject(raw_ret);
            return ret;
        }

        set {
            rc_packman_set_global ((value == null) ? IntPtr.Zero : value.Handle);
        }
    }

    [DllImport("libredcarpet")]
    static extern IntPtr rc_distman_new();

    public static RC.Packman Distman() {
        IntPtr raw_ret = rc_distman_new();
        RC.Packman ret;
        if (raw_ret == IntPtr.Zero)
            ret = null;
        else
            ret = (RC.Packman) GLib.Object.GetObject(raw_ret, true);
        return ret;
    }
