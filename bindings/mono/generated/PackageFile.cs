// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace RC {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class PackageFile : GLib.Opaque {

		[DllImport ("libredcarpetsharpglue-0")]
		extern static uint rcsharp_rc_packagefile_get_mode_offset ();

		static uint mode_offset = rcsharp_rc_packagefile_get_mode_offset ();
		public ushort Mode {
			get {
				unsafe {
					ushort* raw_ptr = (ushort*)(((byte*)Handle) + mode_offset);
					return (*raw_ptr);
				}
			}
			set {
				unsafe {
					ushort* raw_ptr = (ushort*)(((byte*)Handle) + mode_offset);
					*raw_ptr = value;
				}
			}
		}

		[DllImport ("libredcarpetsharpglue-0")]
		extern static uint rcsharp_rc_packagefile_get_md5sum_offset ();

		static uint md5sum_offset = rcsharp_rc_packagefile_get_md5sum_offset ();
		public string Md5sum {
			get {
				unsafe {
					IntPtr* raw_ptr = (IntPtr*)(((byte*)Handle) + md5sum_offset);
					return GLib.Marshaller.Utf8PtrToString ((*raw_ptr));
				}
			}
		}

		[DllImport ("libredcarpetsharpglue-0")]
		extern static uint rcsharp_rc_packagefile_get_mtime_offset ();

		static uint mtime_offset = rcsharp_rc_packagefile_get_mtime_offset ();
		public int Mtime {
			get {
				unsafe {
					int* raw_ptr = (int*)(((byte*)Handle) + mtime_offset);
					return (*raw_ptr);
				}
			}
			set {
				unsafe {
					int* raw_ptr = (int*)(((byte*)Handle) + mtime_offset);
					*raw_ptr = value;
				}
			}
		}

		[DllImport ("libredcarpetsharpglue-0")]
		extern static uint rcsharp_rc_packagefile_get_ghost_offset ();

		static uint ghost_offset = rcsharp_rc_packagefile_get_ghost_offset ();
		public bool Ghost {
			get {
				unsafe {
					bool* raw_ptr = (bool*)(((byte*)Handle) + ghost_offset);
					return (*raw_ptr);
				}
			}
			set {
				unsafe {
					bool* raw_ptr = (bool*)(((byte*)Handle) + ghost_offset);
					*raw_ptr = value;
				}
			}
		}

		[DllImport ("libredcarpetsharpglue-0")]
		extern static uint rcsharp_rc_packagefile_get_uid_offset ();

		static uint uid_offset = rcsharp_rc_packagefile_get_uid_offset ();
		public uint Uid {
			get {
				unsafe {
					uint* raw_ptr = (uint*)(((byte*)Handle) + uid_offset);
					return (*raw_ptr);
				}
			}
			set {
				unsafe {
					uint* raw_ptr = (uint*)(((byte*)Handle) + uid_offset);
					*raw_ptr = value;
				}
			}
		}

		[DllImport ("libredcarpetsharpglue-0")]
		extern static uint rcsharp_rc_packagefile_get_link_target_offset ();

		static uint link_target_offset = rcsharp_rc_packagefile_get_link_target_offset ();
		public string LinkTarget {
			get {
				unsafe {
					IntPtr* raw_ptr = (IntPtr*)(((byte*)Handle) + link_target_offset);
					return GLib.Marshaller.Utf8PtrToString ((*raw_ptr));
				}
			}
		}

		[DllImport ("libredcarpetsharpglue-0")]
		extern static uint rcsharp_rc_packagefile_get_filename_offset ();

		static uint filename_offset = rcsharp_rc_packagefile_get_filename_offset ();
		public string Filename {
			get {
				unsafe {
					IntPtr* raw_ptr = (IntPtr*)(((byte*)Handle) + filename_offset);
					return GLib.Marshaller.Utf8PtrToString ((*raw_ptr));
				}
			}
		}

		[DllImport ("libredcarpetsharpglue-0")]
		extern static uint rcsharp_rc_packagefile_get_size_offset ();

		static uint size_offset = rcsharp_rc_packagefile_get_size_offset ();
		public ulong Size {
			get {
				unsafe {
					UIntPtr* raw_ptr = (UIntPtr*)(((byte*)Handle) + size_offset);
					return (ulong) (*raw_ptr);
				}
			}
			set {
				unsafe {
					UIntPtr* raw_ptr = (UIntPtr*)(((byte*)Handle) + size_offset);
					*raw_ptr = new UIntPtr (value);
				}
			}
		}

		[DllImport ("libredcarpetsharpglue-0")]
		extern static uint rcsharp_rc_packagefile_get_gid_offset ();

		static uint gid_offset = rcsharp_rc_packagefile_get_gid_offset ();
		public uint Gid {
			get {
				unsafe {
					uint* raw_ptr = (uint*)(((byte*)Handle) + gid_offset);
					return (*raw_ptr);
				}
			}
			set {
				unsafe {
					uint* raw_ptr = (uint*)(((byte*)Handle) + gid_offset);
					*raw_ptr = value;
				}
			}
		}

		[DllImport("libredcarpet")]
		static extern void rc_package_file_slist_free(IntPtr files);

		public static void SlistFree(GLib.SList files) {
			rc_package_file_slist_free(files.Handle);
		}

		public PackageFile(IntPtr raw) : base(raw) {}

		[DllImport("libredcarpet")]
		static extern IntPtr rc_package_file_new();

		public PackageFile () 
		{
			Raw = rc_package_file_new();
		}

		[DllImport("libredcarpet")]
		static extern void rc_package_file_free(IntPtr raw);

		protected override void Free (IntPtr raw)
		{
			rc_package_file_free (raw);
		}

#endregion
	}
}
