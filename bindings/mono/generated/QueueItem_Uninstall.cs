// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace RC {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public struct QueueItem_Uninstall {

		public RC.QueueItem Parent;
		private IntPtr _package;

		public RC.Package package {
			get { 
				RC.Package ret = new RC.Package(_package);
				if (ret == null) ret = new RC.Package(_package);
				return ret;
			}
			set { _package = value.Handle; }
		}
		public string Reason;
		private IntPtr _dep_leading_to_uninstall;

		public RC.PackageDep dep_leading_to_uninstall {
			get { 
				RC.PackageDep ret = new RC.PackageDep(_dep_leading_to_uninstall);
				if (ret == null) ret = new RC.PackageDep(_dep_leading_to_uninstall);
				return ret;
			}
			set { _dep_leading_to_uninstall = value.Handle; }
		}
		private IntPtr _upgraded_to;

		public RC.Package upgraded_to {
			get { 
				RC.Package ret = new RC.Package(_upgraded_to);
				if (ret == null) ret = new RC.Package(_upgraded_to);
				return ret;
			}
			set { _upgraded_to = value.Handle; }
		}
		private uint _bitfield0;

		public static RC.QueueItem_Uninstall Zero = new RC.QueueItem_Uninstall ();

		public static RC.QueueItem_Uninstall New(IntPtr raw) {
			if (raw == IntPtr.Zero) {
				return RC.QueueItem_Uninstall.Zero;
			}
			RC.QueueItem_Uninstall self = new RC.QueueItem_Uninstall();
			self = (RC.QueueItem_Uninstall) Marshal.PtrToStructure (raw, self.GetType ());
			return self;
		}

#endregion
	}
}
