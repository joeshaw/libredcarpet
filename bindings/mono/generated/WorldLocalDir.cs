// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace RC {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class WorldLocalDir : RC.WorldService {

		~WorldLocalDir()
		{
			Dispose();
		}

		protected WorldLocalDir(GLib.GType gtype) : base(gtype) {}
		public WorldLocalDir(IntPtr raw) : base(raw) {}

		[DllImport("libredcarpet")]
		static extern IntPtr rc_world_local_dir_new(string path);

		public WorldLocalDir (string path) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (WorldLocalDir)) {
				throw new InvalidOperationException ("Can't override this constructor.");
			}
			Raw = rc_world_local_dir_new(path);
		}

		[DllImport("libredcarpet")]
		static extern IntPtr rc_world_local_dir_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = rc_world_local_dir_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("libredcarpet")]
		static extern void rc_world_local_dir_set_alias(IntPtr raw, string alias);

		public string Alias { 
			set {
				rc_world_local_dir_set_alias(Handle, value);
			}
		}

		[DllImport("libredcarpet")]
		static extern void rc_world_local_dir_register_service();

		public static void RegisterService() {
			rc_world_local_dir_register_service();
		}


		static WorldLocalDir ()
		{
			GtkSharp.LibredcarpetSharp.ObjectManager.Initialize ();
		}
#endregion
	}
}
