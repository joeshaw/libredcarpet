// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace RCSharp {

	using System;

#region Autogenerated code
	[GLib.CDeclCallback]
	internal delegate bool WorldDelegateNative(IntPtr world, IntPtr user_data);

	internal class WorldDelegateWrapper {

		public bool NativeCallback (IntPtr world, IntPtr user_data)
		{
			RC.World _arg0 = GLib.Object.GetObject(world) as RC.World;
			return (bool) managed ( _arg0);
		}

		internal WorldDelegateNative NativeDelegate;
		RC.WorldDelegate managed;

		public WorldDelegateWrapper (RC.WorldDelegate managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new WorldDelegateNative (NativeCallback);
		}

		public static RC.WorldDelegate GetManagedDelegate (WorldDelegateNative native)
		{
			if (native == null)
				return null;
			WorldDelegateWrapper wrapper = (WorldDelegateWrapper) native.Target;
			if (wrapper == null)
				return null;
			return wrapper.managed;
		}
	}
#endregion
}
