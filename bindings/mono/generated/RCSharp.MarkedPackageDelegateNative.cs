// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace RCSharp {

	using System;

#region Autogenerated code
	[GLib.CDeclCallback]
	internal delegate void MarkedPackageDelegateNative(IntPtr pkg, int status, IntPtr data);

	internal class MarkedPackageDelegateWrapper {

		public void NativeCallback (IntPtr pkg, int status, IntPtr data)
		{
			RC.Package _arg0 = pkg == IntPtr.Zero ? null : (RC.Package) GLib.Opaque.GetOpaque (pkg, typeof (RC.Package), false);
			RC.PackageStatus _arg1 = (RC.PackageStatus) status;
			managed ( _arg0,  _arg1);
		}

		internal MarkedPackageDelegateNative NativeDelegate;
		RC.MarkedPackageDelegate managed;

		public MarkedPackageDelegateWrapper (RC.MarkedPackageDelegate managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new MarkedPackageDelegateNative (NativeCallback);
		}

		public static RC.MarkedPackageDelegate GetManagedDelegate (MarkedPackageDelegateNative native)
		{
			if (native == null)
				return null;
			MarkedPackageDelegateWrapper wrapper = (MarkedPackageDelegateWrapper) native.Target;
			if (wrapper == null)
				return null;
			return wrapper.managed;
		}
	}
#endregion
}
