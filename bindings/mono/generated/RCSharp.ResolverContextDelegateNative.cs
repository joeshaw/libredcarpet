// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace RCSharp {

	using System;

#region Autogenerated code
	[GLib.CDeclCallback]
	internal delegate void ResolverContextDelegateNative(IntPtr ctx, IntPtr data);

	internal class ResolverContextDelegateWrapper {

		public void NativeCallback (IntPtr ctx, IntPtr data)
		{
			RC.ResolverContext _arg0 = ctx == IntPtr.Zero ? null : (RC.ResolverContext) GLib.Opaque.GetOpaque (ctx, typeof (RC.ResolverContext), false);
			managed ( _arg0);
		}

		internal ResolverContextDelegateNative NativeDelegate;
		RC.ResolverContextDelegate managed;

		public ResolverContextDelegateWrapper (RC.ResolverContextDelegate managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new ResolverContextDelegateNative (NativeCallback);
		}

		public static RC.ResolverContextDelegate GetManagedDelegate (ResolverContextDelegateNative native)
		{
			if (native == null)
				return null;
			ResolverContextDelegateWrapper wrapper = (ResolverContextDelegateWrapper) native.Target;
			if (wrapper == null)
				return null;
			return wrapper.managed;
		}
	}
#endregion
}
