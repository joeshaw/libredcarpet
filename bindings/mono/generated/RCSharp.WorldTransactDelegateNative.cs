// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace RCSharp {

	using System;

#region Autogenerated code
	internal delegate bool WorldTransactDelegateNative(IntPtr world, IntPtr install_packages, IntPtr remove_packages, int flags);

	internal class WorldTransactDelegateWrapper : GLib.DelegateWrapper {
		static bool _dummy;

		public bool NativeCallback (IntPtr world, IntPtr install_packages, IntPtr remove_packages, int flags)
		{
			RC.World _arg0 = (RC.World) GLib.Object.GetObject(world);
			GLib.SList _arg1 = new GLib.SList(install_packages);
			GLib.SList _arg2 = new GLib.SList(remove_packages);
			int _arg3 = flags;
			return (bool) _managed ( _arg0,  _arg1,  _arg2,  _arg3);
		}

		internal WorldTransactDelegateNative NativeDelegate;
		protected RC.WorldTransactDelegate _managed;

		public WorldTransactDelegateWrapper (RC.WorldTransactDelegate managed, object o) : base (o)
		{
			NativeDelegate = new WorldTransactDelegateNative (NativeCallback);
			_managed = managed;
		}
	}
#endregion
}
