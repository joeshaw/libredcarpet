// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace RC {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public struct Verification {

		public RC.VerificationType Type;
		public RC.VerificationStatus Status;
		public string Info;

		public static RC.Verification Zero = new RC.Verification ();

		public static RC.Verification New(IntPtr raw) {
			if (raw == IntPtr.Zero) {
				return RC.Verification.Zero;
			}
			RC.Verification self = new RC.Verification();
			self = (RC.Verification) Marshal.PtrToStructure (raw, self.GetType ());
			return self;
		}

		[DllImport("libredcarpet")]
		static extern IntPtr rc_verification_new();

		public static Verification New()
		{
			return Verification.New (rc_verification_new());
		}

		[DllImport("libredcarpet")]
		static extern IntPtr rc_verification_type_to_string(int type);

		public static string TypeToString(RC.VerificationType type) {
			IntPtr raw_ret = rc_verification_type_to_string((int) type);
			string ret = Marshal.PtrToStringAnsi(raw_ret);
			return ret;
		}

		[DllImport("libredcarpet")]
		static extern void rc_verification_slist_free(IntPtr verification_list);

		public static void SlistFree(GLib.SList verification_list) {
			rc_verification_slist_free(verification_list.Handle);
		}

		[DllImport("libredcarpet")]
		static extern void rc_verification_free(ref RC.Verification raw);

		public void Free() {
			rc_verification_free(ref this);
		}

		[DllImport("libredcarpet")]
		static extern void rc_verification_set_keyring(string keyring);

		public static string Keyring { 
			set {
				rc_verification_set_keyring(value);
			}
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
