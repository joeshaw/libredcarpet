// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace RCSharp {

	using System;

#region Autogenerated code
	[GLib.CDeclCallback]
	internal delegate bool ChannelAndSubdFnNative(IntPtr arg1, bool arg2, IntPtr arg3);

	internal class ChannelAndSubdFnWrapper {

		public bool NativeCallback (IntPtr arg1, bool arg2, IntPtr arg3)
		{
			RC.Channel _arg0 = arg1 == IntPtr.Zero ? null : (RC.Channel) GLib.Opaque.GetOpaque (arg1, typeof (RC.Channel), false);
			bool _arg1 = arg2;
			IntPtr _arg2 = arg3;
			return (bool) managed ( _arg0,  _arg1,  _arg2);
		}

		internal ChannelAndSubdFnNative NativeDelegate;
		RC.ChannelAndSubdFn managed;

		public ChannelAndSubdFnWrapper (RC.ChannelAndSubdFn managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new ChannelAndSubdFnNative (NativeCallback);
		}

		public static RC.ChannelAndSubdFn GetManagedDelegate (ChannelAndSubdFnNative native)
		{
			if (native == null)
				return null;
			ChannelAndSubdFnWrapper wrapper = (ChannelAndSubdFnWrapper) native.Target;
			if (wrapper == null)
				return null;
			return wrapper.managed;
		}
	}
#endregion
}
