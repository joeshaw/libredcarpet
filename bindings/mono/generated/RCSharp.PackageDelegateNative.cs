// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace RCSharp {

	using System;

#region Autogenerated code
	[GLib.CDeclCallback]
	internal delegate bool PackageDelegateNative(IntPtr pkg, IntPtr data);

	internal class PackageDelegateWrapper {

		public bool NativeCallback (IntPtr pkg, IntPtr data)
		{
			RC.Package _arg0 = pkg == IntPtr.Zero ? null : (RC.Package) GLib.Opaque.GetOpaque (pkg, typeof (RC.Package), false);
			return (bool) managed ( _arg0);
		}

		internal PackageDelegateNative NativeDelegate;
		RC.PackageDelegate managed;

		public PackageDelegateWrapper (RC.PackageDelegate managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new PackageDelegateNative (NativeCallback);
		}

		public static RC.PackageDelegate GetManagedDelegate (PackageDelegateNative native)
		{
			if (native == null)
				return null;
			PackageDelegateWrapper wrapper = (PackageDelegateWrapper) native.Target;
			if (wrapper == null)
				return null;
			return wrapper.managed;
		}
	}
#endregion
}
