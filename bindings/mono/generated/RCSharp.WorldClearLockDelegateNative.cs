// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace RCSharp {

	using System;

#region Autogenerated code
	[GLib.CDeclCallback]
	internal delegate void WorldClearLockDelegateNative(IntPtr world);

	internal class WorldClearLockDelegateWrapper {

		public void NativeCallback (IntPtr world)
		{
			RC.World _arg0 = GLib.Object.GetObject(world) as RC.World;
			managed ( _arg0);
		}

		internal WorldClearLockDelegateNative NativeDelegate;
		RC.WorldClearLockDelegate managed;

		public WorldClearLockDelegateWrapper (RC.WorldClearLockDelegate managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new WorldClearLockDelegateNative (NativeCallback);
		}

		public static RC.WorldClearLockDelegate GetManagedDelegate (WorldClearLockDelegateNative native)
		{
			if (native == null)
				return null;
			WorldClearLockDelegateWrapper wrapper = (WorldClearLockDelegateWrapper) native.Target;
			if (wrapper == null)
				return null;
			return wrapper.managed;
		}
	}
#endregion
}
