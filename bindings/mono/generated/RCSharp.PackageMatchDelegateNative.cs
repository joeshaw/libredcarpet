// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace RCSharp {

	using System;

#region Autogenerated code
	[GLib.CDeclCallback]
	internal delegate bool PackageMatchDelegateNative(IntPtr match, IntPtr data);

	internal class PackageMatchDelegateWrapper {

		public bool NativeCallback (IntPtr match, IntPtr data)
		{
			RC.PackageMatch _arg0 = match == IntPtr.Zero ? null : (RC.PackageMatch) GLib.Opaque.GetOpaque (match, typeof (RC.PackageMatch), false);
			return (bool) managed ( _arg0);
		}

		internal PackageMatchDelegateNative NativeDelegate;
		RC.PackageMatchDelegate managed;

		public PackageMatchDelegateWrapper (RC.PackageMatchDelegate managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new PackageMatchDelegateNative (NativeCallback);
		}

		public static RC.PackageMatchDelegate GetManagedDelegate (PackageMatchDelegateNative native)
		{
			if (native == null)
				return null;
			PackageMatchDelegateWrapper wrapper = (PackageMatchDelegateWrapper) native.Target;
			if (wrapper == null)
				return null;
			return wrapper.managed;
		}
	}
#endregion
}
