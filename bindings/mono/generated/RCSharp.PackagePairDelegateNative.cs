// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace RCSharp {

	using System;

#region Autogenerated code
	[GLib.CDeclCallback]
	internal delegate void PackagePairDelegateNative(IntPtr pkg1, IntPtr pkg2, IntPtr data);

	internal class PackagePairDelegateWrapper {

		public void NativeCallback (IntPtr pkg1, IntPtr pkg2, IntPtr data)
		{
			RC.Package _arg0 = pkg1 == IntPtr.Zero ? null : (RC.Package) GLib.Opaque.GetOpaque (pkg1, typeof (RC.Package), false);
			RC.Package _arg1 = pkg2 == IntPtr.Zero ? null : (RC.Package) GLib.Opaque.GetOpaque (pkg2, typeof (RC.Package), false);
			managed ( _arg0,  _arg1);
		}

		internal PackagePairDelegateNative NativeDelegate;
		RC.PackagePairDelegate managed;

		public PackagePairDelegateWrapper (RC.PackagePairDelegate managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new PackagePairDelegateNative (NativeCallback);
		}

		public static RC.PackagePairDelegate GetManagedDelegate (PackagePairDelegateNative native)
		{
			if (native == null)
				return null;
			PackagePairDelegateWrapper wrapper = (PackagePairDelegateWrapper) native.Target;
			if (wrapper == null)
				return null;
			return wrapper.managed;
		}
	}
#endregion
}
