// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace RC {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class WorldUndump : RC.WorldStore {

		~WorldUndump()
		{
			Dispose();
		}

		protected WorldUndump(GLib.GType gtype) : base(gtype) {}
		public WorldUndump(IntPtr raw) : base(raw) {}

		[DllImport("libredcarpet")]
		static extern IntPtr rc_world_undump_new(string filename);

		public WorldUndump (string filename) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (WorldUndump)) {
				throw new InvalidOperationException ("Can't override this constructor.");
			}
			Raw = rc_world_undump_new(filename);
		}

		[DllImport("libredcarpet")]
		static extern IntPtr rc_world_undump_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = rc_world_undump_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("libredcarpet")]
		static extern void rc_world_undump_load(IntPtr raw, string filename);

		public void Load(string filename) {
			rc_world_undump_load(Handle, filename);
		}


		static WorldUndump ()
		{
			GtkSharp.LibredcarpetSharp.ObjectManager.Initialize ();
		}
#endregion
	}
}
