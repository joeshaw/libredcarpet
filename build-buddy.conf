<?xml version="1.0" ?>

<!DOCTYPE module SYSTEM "helix-build.dtd">

<module>
    <targetset>
        <filter>
            <i>.*</i>
        </filter>

        <rcsid>$Id$</rcsid>
        <name>libredcarpet</name>

        <version/>
        <snapshot/>
        <rev>0</rev>
        <serial>0</serial>

        <source>
            <i name="0" type="checkout">
                <location>.</location>
                <dist>[[zenautogen]] &amp;&amp; make dist</dist>
                <distfile>libredcarpet-*.tar.gz</distfile>
            </i>
        </source>

        <psdata id="copyright">GPL</psdata>
        <psdata id="url">http://www.ximian.com/</psdata>

        <!-- Provide an autogen macro.  Some versions of bb don't
        substitute configure with autogen.sh when dist is set manually
        (the correct behavior), but it causes problems for us here.  This
        macro gets around the problem -->

        <macro id="prefix">/opt/novell/zenworks</macro>
        <macro id="sysconfdir">/etc/opt/novell/zenworks</macro>
        <macro id="mandir">/opt/novell/zenworks/man</macro>
        <macro id="infodir">/opt/novell/zenworks/info</macro>
        <macro id="localstatedir">/var/opt/novell/zenworks</macro>
        <macro id="rpmversion">`rpm --version | awk '{print $3}'`</macro>
        <macro id="flags">--prefix=[[prefix]] --libdir=[[libdir]] --sysconfdir=[[sysconfdir]] --mandir=[[mandir]] --infodir=[[infodir]] --localstatedir=[[localstatedir]] --enable-backend-dpkg --enable-backend-rpm --enable-rpm-version=[[rpmversion]] --with-rpm-prefix=[[usrprefix]] --enable-fake-openpty --disable-python</macro>
        <macro id="zenautogen">./autogen.sh [[flags]]</macro>
        <macro id="zenconfigure">./configure [[flags]]</macro>
        <macro id="zeninstall">${MAKE} install prefix=${DESTDIR}[[prefix]] libdir=${DESTDIR}[[libdir]]</macro>

        <env id="PATH">/opt/gnome/bin:{{PATH}}</env>
        <env id="ACLOCAL_FLAGS"></env>
        <env id="PKG_CONFIG_PATH">/opt/gnome/lib/pkgconfig:/usr/lib/pkgconfig</env>

        <macro id="coverage_cflags">-g -O0 -ftest-coverage -fprofile-arcs</macro>
        <list id="common-builddeps">
            <i>libtool &gt;= 1.4</i>
            <i>automake &gt;= 1.6</i>
            <i>pkgconfig &gt;= 0.9</i>
            <i>autoconf &gt;= 2.52</i>
            <i>zlib-devel</i>
            <i>rpm-devel</i>
        </list>
        <list id="32bit-builddeps">
            <i>glib2-devel</i>
            <i>libxml2-devel</i>
        </list>
        <list id="64bit-builddeps">
            <i>glib2-devel &gt;= 2.4.0</i>
            <i>libxml2-devel &gt;= 2.6.8</i>
        </list>
        <list id="suse-builddeps">
            <i>gnome-common &gt;= 2.4.0-102</i>
            <i>popt-devel</i>
            <i>db-devel</i>
        </list>
        <list id="redhat-builddeps">
            <i>bzip2-devel</i>
        </list>

        <unstripped/>
        <prepare>[[zenconfigure]]</prepare>
        <compile>(cd src; ${MAKE} rpm-stubs.h dpkg-helper.h distributions-xml.h rc-marshal.c rc-marshal.h); ${MAKE}</compile>
        <install>[[zeninstall]]; ln -sf `readlink ${DESTDIR}[[prefix]]/lib/mono/libredcarpet-sharp/libredcarpet-sharp.dll |sed -e 's,.*/dest,,'` ${DESTDIR}[[prefix]]/lib/mono/libredcarpet-sharp/libredcarpet-sharp.dll</install>

        <builddep id="buildrequires">
            <l>common-builddeps</l>
            <l>suse-builddeps</l>
            <l>32bit-builddeps</l>
        </builddep>

        <package id="default">
            <name>novell-zenworks-libredcarpet</name>
            <psdata id="group">System Environment/Applications</psdata>

            <dep id="obsoletes">
                <i>libredcarpet</i>
            </dep>

            <files>
                <i>[[libdir]]/*.a</i>
                <i>[[libdir]]/*.so</i>
                <i>[[libdir]]/*.so.0</i>
                <i>[[libdir]]/*.so.0.0.0</i>
                <i>[[libdir]]/pkgconfig/*.pc</i>
                <i>[[prefix]]/include/*</i>
            </files>

            <script id="postinst"><i>[[ldconfig]]</i></script>
            <script id="postrm"><i>[[ldconfig]]</i></script>

            <description>
<h>Red Carpet software management library</h>
<p>The libredcarpet package provides a dependency and conflict resolution library used by Red Carpet. Support for rpm and dpkg.</p>
            </description>
        </package>

        <package id="tools">
            <name>novell-zenworks-libredcarpet-tools</name>
            <psdata id="group">Development/Tools</psdata>

            <dep id="obsoletes">
                <i>libredcarpet-tools</i>
            </dep>

            <dep id="requires">
                <i>novell-zenworks-libredcarpet</i>
            </dep>

            <files>
                <i>/opt/novell/zenworks/bin/*</i>
            </files>

            <description>
<h>Tools based on Red Carpet software management library</h>
<p>Utilities that provide access to libredcarpet functions for ZLM client</p>
            </description>
        </package>
    </targetset>

    <targetset>
        <filter>
            <i>rhel</i>
        </filter>
        <builddep id="buildrequires">
            <l>common-builddeps</l>
            <l>redhat-builddeps</l>
            <l>32bit-builddeps</l>
        </builddep>
    </targetset>

    <targetset>
        <filter>
            <i>rhel-3..-i386</i>
        </filter>
        <dist>export PATH=$PATH:/opt/novell/zenworks/bin ; ACLOCAL_FLAGS= WANT_AUTOCONF_2_5=1 [[zenautogen]] &amp;&amp; make dist</dist>
        <prepare>export PATH=$PATH:/opt/novell/zenworks/bin ; WANT_AUTOCONF_2_5=1 [[zenconfigure]]</prepare>
    </targetset>

    <targetset>
        <filter>
            <i>rhel-3..-x86_64</i>
        </filter>
        <prepare>export PATH=$PATH:/opt/novell/zenworks/bin ; WANT_AUTOCONF_2_5=1 [[zenconfigure]] --enable-opteron-hack</prepare>
        <builddep id="buildrequires">
            <l>common-builddeps</l>
            <l>redhat-builddeps</l>
            <l>64bit-builddeps</l>
        </builddep>
    </targetset>

    <targetset>
        <filter>
            <i>rhel-4..-x86_64</i>
        </filter>
        <prepare>export PATH=$PATH:/opt/novell/zenworks/bin ; WANT_AUTOCONF_2_5=1 [[zenconfigure]] --enable-opteron-hack</prepare>
        <builddep id="buildrequires">
            <l>common-builddeps</l>
            <l>redhat-builddeps</l>
            <l>64bit-builddeps</l>
        </builddep>
    </targetset>

    <targetset>
        <filter>
            <i>(sles|suse|nld)</i>
        </filter>
        <package id="default">
            <dep id="requires">
                <i>glibc-locale</i>
            </dep>
        </package>
        <package id="tools">
            <dep id="requires">
                <i>glibc-locale</i>
            </dep>
        </package>
    </targetset>
</module>

<!--
Local Variables:
mode: xml
End:
-->

<!-- vim: set ts=4 expandtab: -->
