dnl -*- tab-width: 2; indent-tabs-mode: nil -*-

AC_INIT(src/libredcarpet.h)

AM_CONFIG_HEADER(config.h)

dnl libtool versioning
LT_CURRENT=0
LT_REVISION=0
LT_AGE=0

VERSION=$LT_CURRENT.$LT_REVISION.$LT_AGE
PACKAGE=libredcarpet

AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)
AC_SUBST(LT_VERSION)
AC_SUBST(LT_PACKAGE)

AM_INIT_AUTOMAKE($PACKAGE, $VERSION)

dnl Check for required programs
AC_PROG_CC
AC_ISC_POSIX
AC_HEADER_STDC
AC_ARG_PROGRAM
AC_PROG_LIBTOOL

dnl endianness check, just for dobey ;-)
AC_C_BIGENDIAN

dnl glib???
AM_PATH_GLIB(1.2.0)

dnl gtk
AM_PATH_GTK(1.2.0)

dnl Check for libz to handle compressed xml files
AC_CHECK_LIB(z, inflate)

dnl The available backends
AC_ARG_ENABLE(backend-dpkg, [  --enable-backend-dpkg   include DPKG backend],
  enable_backend_dpkg=yes, enable_backend_dpkg=no)
AC_ARG_ENABLE(backend-rpm,  [  --enable-backend-rpm     include RPM backend],
  enable_backend_rpm=yes, enable_backend_rpm=no)
AC_ARG_ENABLE(backend-rpm3-static,  [  --enable-backend-rpm3-static include static RPM3 backend],
  enable_backend_rpm3_static=yes, enable_backend_rpm3_static=no)
AC_ARG_ENABLE(strict-rpm-order,  [  --enable-strict-rpm-order     order packages with rpmlib ordering],
  strict_rpm_order=yes, strict_rpm_order=no)
AC_ARG_ENABLE(backend-rpm4-static,  [  --enable-backend-rpm4-static include static RPM4 backend],
  enable_backend_rpm4_static=yes, enable_backend_rpm4_static=no)
AC_ARG_WITH(private-namespace, 
[  --with-private-namespace=NAME   subdir of $libdir and $datadir where private libraries/data will be installed (redcarpet) ],
[PRIVATE_NAMESPACE="$withval"], [PRIVATE_NAMESPACE="redcarpet"])

AC_SUBST(PRIVATE_NAMESPACE)

if test "x$enable_backend_dpkg" != "xyes" -a "x$enable_backend_rpm" != "xyes" -a "x$enable_backend_rpm3_static" != "xyes" -a "x$enable_backend_rpm4_static";
then
  AC_WARN([no backends were specified])
fi

AC_ARG_WITH(rpm-prefix,
[  --with-rpm-prefix=DIR   prefix where rpm header files are installed (/usr)], [RPM_PREFIX=$withval], [RPM_PREFIX=/usr])

AC_ARG_WITH(rpm-static-libs,
[  --with-rpm-extra-libs=], [RPM_STATIC_LIBS=$withval], [RPM_STATIC_LIBS="/usr/lib/librpm.a /usr/lib/libpopt.a /usr/lib/libz.a /usr/lib/libbz2.a /usr/lib/libdb1.a"])

RPM_STATIC_LIBS=`echo $RPM_STATIC_LIBS | sed 's,@, ,g'`

AC_MSG_CHECKING("RPM version")

AC_ARG_ENABLE(rpm-version,
[  --enable-rpm-version=], [RPM_VERSION=$enableval], [RPM_VERSION=4.0.2])

RPM_MAJOR_VERSION=`echo $RPM_VERSION | cut -d . -f 1`
RPM_MINOR_VERSION=`echo $RPM_VERSION | cut -d . -f 2`
RPM_MICRO_VERSION=`echo $RPM_VERSION | cut -d . -f 3`

AC_DEFINE_UNQUOTED(RPM_MAJOR_VERSION, $RPM_MAJOR_VERSION, [major rpm version])
AC_DEFINE_UNQUOTED(RPM_MINOR_VERSION, $RPM_MINOR_VERSION, [minor rpm version])
AC_DEFINE_UNQUOTED(RPM_MICRO_VERSION, $RPM_MICRO_VERSION, [micro rpm version])

RPM_VERSION=`printf "%d%02d%02d\n" $RPM_MAJOR_VERSION $RPM_MINOR_VERSION $RPM_MICRO_VERSION`

AC_DEFINE_UNQUOTED(RPM_VERSION, $RPM_VERSION, [rpm version])

AC_MSG_RESULT($RPM_MAJOR_VERSION.$RPM_MINOR_VERSION.$RPM_MICRO_VERSION)

AC_SUBST(RPM_PREFIX)
AC_SUBST(RPM_STATIC_LIBS)

AM_CONDITIONAL(ENABLE_RPM, false)
AM_CONDITIONAL(STATIC_RPM, false)

AC_SUBST(RPMLIB_CFLAGS)

dnl Ordering for numbers vs letters
if test "x$strict_rpm_order" = "xyes"; then
  AC_DEFINE(STRICT_RPM_ORDER)
fi

dnl RPM (dynamic)
if test "x$enable_backend_rpm" = "xyes"; then
  save_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS -I$RPM_PREFIX/include -I$RPM_PREFIX/include/rpm"

  AC_CHECK_HEADERS(rpm/rpmlib.h,, AC_MSG_ERROR(couldn't find rpmlib.h))

  RPMLIB_CFLAGS="-I$RPM_PREFIX/include -I$RPM_PREFIX/include/rpm"

  AM_CONDITIONAL(ENABLE_RPM, true)
  AC_DEFINE(ENABLE_RPM)

  CPPFLAGS="$save_CPPFLAGS"
fi

dnl RPM (static)
if test "x$enable_backend_rpm3_static" = "xyes" -o "x$enable_backend_rpm4_static" = "xyes"; then
  save_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS -I$RPM_PREFIX/include/rpm"

  AC_CHECK_HEADERS(rpm/rpmlib.h,, AC_MSG_ERROR(couldn't find rpmlib.h))

  if test "x$enable_backend_rpm4_static" = "xyes"; then
    if grep -q ugid.h "$RPM_PREFIX/include/rpm/misc.h"; then
      if test \! -r /usr/include/rpm/ugid.h ; then
        AC_MSG_ERROR([broken rpm/misc.h, see README-ugid])
      fi
    fi
    AC_DEFINE(RC_RPM4)
  fi

  RPMLIB_CFLAGS="-I$RPM_PREFIX/include/rpm"

  AM_CONDITIONAL(ENABLE_RPM, true)
  AM_CONDITIONAL(STATIC_RPM, true)
  AC_DEFINE(ENABLE_RPM)
  AC_DEFINE(STATIC_RPM)

  CPPFLAGS="$save_CPPFLAGS"
fi

AM_CONDITIONAL(ENABLE_DPKG, false)

dnl DPKG
if test "x$enable_backend_dpkg" = "xyes"; then
  AC_ARG_ENABLE(fake-openpty,
    [  --enable-fake-openpty   pretend openpty exists],
    [CFLAGS="$CFLAGS -Dfake_openpty"; disable_openpty=yes])
  if test "x$disable_openpty" != "xyes"; then
    AC_CHECK_LIB(util, openpty,,
      AC_MSG_ERROR(couldn't find openpty in libutil))
  fi

  AM_CONDITIONAL(ENABLE_DPKG, true)
  AC_DEFINE(ENABLE_DPKG)
fi

dnl gtk-doc
AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)

dnl libxml
AC_SUBST(XML_LIBS)
AC_SUBST(XML_CFLAGS)

XML_LIBS=`xml-config --libs`
XML_CFLAGS=`xml-config --cflags`

dnl aargh
XML_CFLAGS=`echo $XML_CFLAGS | sed "s/\/gnome-xml//g"`

if test "x$XML_LIBS" = "x"; then
  AC_MSG_ERROR(couldn't find xml-config)
fi

save_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $XML_CFLAGS"
save_LDFLAGS="$LDFLAGS"
LDFLAGS="$LDFLAGS $XML_LIBS"

AC_CHECK_LIB(xml, xmlDocDump,,
  AC_MSG_ERROR(couldn't find libxml))

AC_CHECK_HEADERS(gnome-xml/tree.h,,
  AC_MSG_ERROR(couldn't find gnome-xml/tree.h))

CPPFLAGS="$save_CPPFLAGS"
LDFLAGS="$save_LDFLAGS"

AC_OUTPUT([
Makefile
src/Makefile
dependency-tests/Makefile
tools/Makefile
])

# Removed cause it's busted-ass.
# doc/Makefile

echo "
Configuration:

  Source code location:         ${srcdir}
  Compiler:                     ${CC}
  Include DPKG support:         ${enable_backend_dpkg}
  Include dynamic RPM support:  ${enable_backend_rpm}
  Include static RPM3 support:  ${enable_backend_rpm3_static}
  Include static RPM4 support:  ${enable_backend_rpm4_static}
"
