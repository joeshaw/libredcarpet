dnl -*- tab-width: 2; indent-tabs-mode: nil -*-

AC_INIT(src/libredcarpet.h)

AM_CONFIG_HEADER(config.h)

dnl libtool versioning
LT_CURRENT=0
LT_REVISION=0
LT_AGE=0

VERSION=$LT_CURRENT.$LT_REVISION.$LT_AGE
PACKAGE=libredcarpet

AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)
AC_SUBST(LT_VERSION)
AC_SUBST(LT_PACKAGE)

AM_INIT_AUTOMAKE($PACKAGE, $VERSION)

dnl Check for required programs
AC_PROG_CC
AC_ISC_POSIX
AC_HEADER_STDC
AC_ARG_PROGRAM
AC_PROG_LIBTOOL

dnl glib???
AM_PATH_GLIB(1.2.0)

dnl gtk
AM_PATH_GTK(1.2.0)

dnl Check for libz to handle compressed xml files
AC_CHECK_LIB(z, inflate)

dnl The available backends
AC_ARG_ENABLE(backend-dpkg, [  --enable-backend-dpkg   include DPKG backend],
  enable_backend_dpkg=yes, enable_backend_dpkg=no)
AC_ARG_ENABLE(backend-rpm,  [  --enable-backend-rpm     include RPM backend],
  enable_backend_rpm=yes, enable_backend_rpm=no)
AC_ARG_ENABLE(backend-rpm3-static,  [  --enable-backend-rpm3-static include static RPM3 backend],
  enable_backend_rpm3_static=yes, enable_backend_rpm3_static=no)

if test "x$enable_backend_dpkg" != "xyes" -a "x$enable_backend_rpm" != "xyes" -a "x$enable_backend_rpm3_static" != "xyes";
then
  AC_WARN([no backends were specified])
fi

if test "x$enable_backend_rpm" = "xyes" -a "x$enable_backend_rpm3_static" = "xyes";
then
  AC_ERROR([dynamic and static rpm backends may not both be compiled in])
fi

AC_ARG_WITH(rpm-prefix,
[  --with-rpm-prefix=DIR   prefix where rpm header files are installed (/usr)], [RPM_PREFIX=$withval], [RPM_PREFIX=/usr])

AM_CONDITIONAL(ENABLE_RPM, false)
AM_CONDITIONAL(STATIC_RPM, false)

AC_SUBST(RPMLIB_CFLAGS)

dnl RPM (dynamic)
if test "x$enable_backend_rpm" = "xyes"; then
  save_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS -I$RPM_PREFIX/include/rpm"

  AC_CHECK_HEADERS(rpm/rpmlib.h,, AC_MSG_ERROR(couldn't find rpmlib.h))

  RPMLIB_CFLAGS="-I$RPM_PREFIX/include/rpm"

  AM_CONDITIONAL(ENABLE_RPM, true)
  AC_DEFINE(ENABLE_RPM)

  CPPFLAGS="$save_CPPFLAGS"
fi

dnl RPM (static)
if test "x$enable_backend_rpm3_static" = "xyes"; then
  save_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS -I$RPM_PREFIX/include/rpm"

  AC_CHECK_HEADERS(rpm/rpmlib.h,, AC_MSG_ERROR(couldn't find rpmlib.h))

dnl  if grep -q ugid.h "$RPM_PREFIX/include/rpm/misc.h"; then
dnl    if test \! -r /usr/include/rpm/ugid.h ; then
dnl      AC_MSG_ERROR([broken rpm/misc.h, see README-ugid])
dnl    fi
dnl  fi

  RPMLIB_CFLAGS="-I$RPM_PREFIX/include/rpm"

  AM_CONDITIONAL(ENABLE_RPM, true)
  AM_CONDITIONAL(STATIC_RPM, true)
  AC_DEFINE(ENABLE_RPM)
  AC_DEFINE(STATIC_RPM)

  CPPFLAGS="$save_CPPFLAGS"
fi

AM_CONDITIONAL(ENABLE_DPKG, false)

dnl DPKG
if test "x$enable_backend_dpkg" = "xyes"; then
  AC_ARG_ENABLE(fake-openpty,
    [  --enable-fake-openpty   pretend openpty exists],
    [CFLAGS="$CFLAGS -D'openpty(x)=/**/'"; disable_openpty=yes])
  if test "x$disable_openpty" != "xyes"; then
    AC_CHECK_LIB(util, openpty,,
      AC_MSG_ERROR(couldn't find openpty in libutil))
  fi

  AM_CONDITIONAL(ENABLE_DPKG, true)
  AC_DEFINE(ENABLE_DPKG)
fi

dnl libxml
XML_LIBS=`xml-config --libs`
XML_CFLAGS=`xml-config --cflags`

if test "x$XML_LIBS" = "x"; then
  AC_MSG_ERROR(couldn't find xml-config)
fi

save_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $XML_CFLAGS"
save_LDFLAGS="$LDFLAGS"
LDFLAGS="$LDFLAGS $XML_LIBS"

AC_CHECK_LIB(xml, xmlDocDump,,
  AC_MSG_ERROR(couldn't find libxml))

AC_CHECK_HEADERS(tree.h,,
  AC_MSG_ERROR(couldn't find tree.h))

CPPFLAGS="$save_CPPFLAGS"
LDFLAGS="$save_LDFLAGS"

AC_OUTPUT([
Makefile
src/Makefile
])

echo "
Configuration:

  Source code location:         ${srcdir}
  Compiler:                     ${CC}
  Include DPKG support:         ${enable_backend_dpkg}
  Include dynamic RPM support:  ${enable_backend_rpm}
  Include static RPM3 support:  ${enable_backend_rpm3_static}
"
