dnl -*- tab-width: 2; indent-tabs-mode: nil -*-

AC_INIT(src/libredcarpet.h)

AM_CONFIG_HEADER(config.h)

dnl libtool versioning
LIBREDCARPET_MAJOR_VERSION=0
LIBREDCARPET_MINOR_VERSION=9
LIBREDCARPET_MICRO_VERSION=0

MAJOR=0
MINOR=

VERSION=$LIBREDCARPET_MAJOR_VERSION.$LIBREDCARPET_MINOR_VERSION.$LIBREDCARPET_MICRO_VERSION
PACKAGE=libredcarpet

AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)
AC_SUBST(LT_VERSION)
AC_SUBST(LT_PACKAGE)

AM_INIT_AUTOMAKE($PACKAGE, $VERSION)

dnl Check for required programs
AC_PROG_CC
AC_ISC_POSIX
AC_HEADER_STDC
AM_PROG_LIBTOOL

dnl endianness check, just for dobey ;-)
AC_C_BIGENDIAN

PKG_CHECK_MODULES(LIBREDCARPET, glib-2.0 gobject-2.0 gmodule-2.0 libxml-2.0)

AC_SUBST(LIBREDCARPET_CFLAGS)
AC_SUBST(LIBREDCARPET_LIBS)

LIBREDCARPET_LIBS="$LIBREDCARPET_LIBS -lpthread -lrt"

dnl Check for libz to handle compressed xml files
AC_CHECK_LIB(z, inflate, LIBREDCARPET_LIBS="$LIBREDCARPET_LIBS -lz",
  AC_ERROR([libredcarpet requires zlib]))

dnl not everyone has mkdtemp
AC_CHECK_FUNCS(mkdtemp)

dnl The available backends
AC_ARG_ENABLE(backend-dpkg, [  --enable-backend-dpkg   include DPKG backend],
  enable_backend_dpkg=yes, enable_backend_dpkg=no)
AC_ARG_ENABLE(backend-rpm,  [  --enable-backend-rpm    include RPM backend],
  enable_backend_rpm=yes, enable_backend_rpm=no)

if test "x$enable_backend_dpkg" != "xyes" -a "x$enable_backend_rpm" != "xyes";
then
  AC_MSG_WARN([no backends were specified])
fi

AM_CONDITIONAL(ENABLE_RPM, false)
AM_CONDITIONAL(STATIC_RPM, false)
AM_CONDITIONAL(ENABLE_DPKG, false)

if test "x$enable_backend_rpm" = "xyes";
then
  AM_CONDITIONAL(ENABLE_RPM, true)
  AC_DEFINE(ENABLE_RPM)

  dnl I wonder if it's possible to figure out the RPM version automatically
  AC_MSG_CHECKING("RPM version")

  AC_ARG_ENABLE(rpm-version,
    [  --enable-rpm-version=], [RPM_VERSION=$enableval], [RPM_VERSION=4.0.2])

  RPM_MAJOR_VERSION=`echo $RPM_VERSION | cut -d . -f 1`
  RPM_MINOR_VERSION=`echo $RPM_VERSION | cut -d . -f 2`
  RPM_MICRO_VERSION=`echo $RPM_VERSION | cut -d . -f 3`

  AC_DEFINE_UNQUOTED(RPM_MAJOR_VERSION, $RPM_MAJOR_VERSION)
  AC_DEFINE_UNQUOTED(RPM_MINOR_VERSION, $RPM_MINOR_VERSION)
  AC_DEFINE_UNQUOTED(RPM_MICRO_VERSION, $RPM_MICRO_VERSION)

  RPM_VERSION=`printf "%d%02d%02d\n" $RPM_MAJOR_VERSION $RPM_MINOR_VERSION $RPM_MICRO_VERSION`

  AC_DEFINE_UNQUOTED(RPM_VERSION, $RPM_VERSION)

  AC_MSG_RESULT($RPM_MAJOR_VERSION.$RPM_MINOR_VERSION.$RPM_MICRO_VERSION)

  dnl Where is RPM installed?
  AC_ARG_WITH(rpm-prefix,
    [  --with-rpm-prefix=DIR   prefix where rpm is installed (/usr)],
    [RPM_PREFIX=$withval], [RPM_PREFIX=/usr])

  AC_SUBST(RPM_PREFIX)

  dnl Static linking sucks
  AC_ARG_ENABLE(static-rpm,  [  --enable-static-rpm     link RPM statically],
    enable_static_rpm=yes, enable_static_rpm=no)

  if test "x$enable_static_rpm" = "xyes";
  then
    AM_CONDITIONAL(STATIC_RPM, true)
    AC_DEFINE(STATIC_RPM)

    AC_ARG_WITH(rpm-static-libs,
      [  --with-rpm-extra-libs=], [RPM_STATIC_LIBS=$withval],
      [RPM_STATIC_LIBS="/usr/lib/librpm.a /usr/lib/libpopt.a /usr/lib/libz.a /usr/lib/libbz2.a /usr/lib/libdb1.a"])

    RPM_STATIC_LIBS=`echo $RPM_STATIC_LIBS | sed 's,@, ,g'`

    AC_SUBST(RPM_STATIC_LIBS)
  fi

  dnl Ordering for numbers vs letters
  AC_ARG_ENABLE(strict-rpm-order,
    [  --enable-strict-rpm-order     order packages with rpmlib ordering],
    strict_rpm_order=yes, strict_rpm_order=no)

  if test "x$strict_rpm_order" = "xyes"; then
    AC_DEFINE(STRICT_RPM_ORDER)
  fi

  dnl Find the RPM headers
  save_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS -I$RPM_PREFIX/include -I$RPM_PREFIX/include/rpm"

  AC_CHECK_HEADERS(rpm/rpmlib.h rpm/rpmmacro.h,,
    AC_MSG_ERROR(couldn't find rpm headers))

  RPMLIB_CFLAGS="-I$RPM_PREFIX/include -I$RPM_PREFIX/include/rpm"

  CPPFLAGS="$save_CPPFLAGS"

  if grep -q ugid.h "$RPM_PREFIX/include/rpm/misc.h"; then
    if test \! -r /usr/include/rpm/ugid.h ; then
      AC_MSG_ERROR([broken rpm/misc.h, see README-ugid])
    fi
  fi

  LIBREDCARPET_CFLAGS="$LIBREDCARPET_CFLAGS $RPMLIB_CFLAGS"
fi

if test "x$enable_backend_dpkg" = "xyes"; then
  AC_ARG_ENABLE(fake-openpty,
    [  --enable-fake-openpty   pretend openpty exists],
    [CFLAGS="$CFLAGS -Dfake_openpty"; disable_openpty=yes])
  if test "x$disable_openpty" != "xyes"; then
    AC_CHECK_LIB(util, openpty,
      LIBREDCARPET_LIBS="$LIBREDCARPET_LIBS -lutil",
      AC_MSG_ERROR(couldn't find openpty in libutil))
  fi

  AM_CONDITIONAL(ENABLE_DPKG, true)
  AC_DEFINE(ENABLE_DPKG)
fi

dnl gtk-doc
AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)

LIBREDCARPET_LIBS=`echo $LIBREDCARPET_LIBS | sed -e 's,^ *,,g' -e 's,  *, ,g' -e 's, *$,,g'`
LIBREDCARPET_CFLAGS=`echo $LIBREDCARPET_CFLAGS | sed -e 's,^ *,,g' -e 's,  *, ,g' -e 's, *$,,g'`

AC_OUTPUT([
Makefile
src/Makefile
dependency-tests/Makefile
tools/Makefile
libredcarpet.pc
])

# Removed cause it's busted-ass.
# doc/Makefile

echo "
Configuration:

  Source code location:         ${srcdir}
  Compiler:                     ${CC}

  Include DPKG support:         ${enable_backend_dpkg}
  Include RPM support:          ${enable_backend_rpm}

  LIBREDCARPET_CFLAGS:          ${LIBREDCARPET_CFLAGS}
  LIBREDCARPET_LIBS:            ${LIBREDCARPET_LIBS}
"
